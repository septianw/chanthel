<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE config [
        <!ENTITY cb_solr_types SYSTEM "cb_solr_types.xml">
        <!ENTITY cb_solr_fields SYSTEM "cb_solr_fields.xml">
]>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default)
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
	- set stored="false" for all fields possible (esp large fields) when you
		only need to search on the field but don't need to return the original
		value.
	- set indexed="false" if you don't need to search on the field, but only
		return the field as a result of searching on other indexed fields.
	- remove all unneeded copyField statements
	- for best index size and searching performance, set "index" to false
		for all general text fields, use copyField to copy them to the
		catchall "text" field, and use that for searching.
	- For maximum indexing performance, use the StreamingUpdateSolrServer
		java client.
	- Remember to run the JVM in server mode, and use a higher logging level
		that avoids logging every request
-->

<schema name="example" version="1.2">
	<!-- attribute "name" is the name of this schema and is only used for display purposes.
			 Applications should change this to reflect the nature of the search collection.
			 version="1.2" is Solr's version number for the schema syntax and semantics.  It should
			 not normally be changed by applications.
			 1.0: multiValued attribute did not exist, all fields are multiValued by nature
			 1.1: multiValued attribute introduced, false by default
			 1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
		 -->

	<types>
    		&cb_solr_types;
 	</types>
	
	<fields>
		&cb_solr_fields;
 	</fields>

	<!-- Field to use to determine and enforce document uniqueness.
				Unless this field is marked with required="false", it will be a required field
		-->
	 <uniqueKey>id</uniqueKey>

	<!-- field for the QueryParser to use when an explicit fieldname is absent -->
	<defaultSearchField>content</defaultSearchField>

	<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
	<solrQueryParser defaultOperator="AND"/>
		<!-- copyField commands copy one field to another at the time a document
					is added to the index.  It's used either to index the same field differently,
					or to add multiple fields to the same field for easier/faster searching.  -->

	<!--
		<copyField source="cat" dest="text"/>
		<copyField source="name" dest="text"/>
		<copyField source="manu" dest="text"/>
		<copyField source="features" dest="text"/>
		<copyField source="includes" dest="text"/>
		<copyField source="manu" dest="manu_exact"/>
	-->
	<copyField source="name" dest="sort_name"/>
	<copyField source="path" dest="sort_path"/>


		<!-- Above, multiple source fields are copied to the [text] field.
			Another way to map multiple source fields to the same
			destination field is to use the dynamic field syntax.
			copyField also supports a maxChars to copy setting.  -->

		<!-- <copyField source="*_t" dest="text" maxChars="3000"/> -->

		<!-- copy name to alphaNameSort, a field designed for sorting by name -->
		<!-- <copyField source="name" dest="alphaNameSort"/> -->


	<!-- Similarity is the scoring routine for each document vs. a query.
				A custom similarity may be specified here, but the default is fine
				for most applications.  -->
	<!-- <similarity class="org.apache.lucene.search.DefaultSimilarity"/> -->
	<!-- ... OR ...
				Specify a SimilarityFactory class name implementation
				allowing parameters to be used.
	-->
	<!--
	<similarity class="com.example.solr.CustomSimilarityFactory">
		 <str name="paramkey">param value</str>
	</similarity>
	-->
</schema>
